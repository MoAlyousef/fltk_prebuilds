name: rustbuild
on: [push, pull_request]

jobs:
  build-msys-mingw64:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git mingw-w64-x86_64-cc mingw-w64-x86_64-cmake mingw-w64-x86_64-ninja mingw-w64-x86_64-rust --needed
      - name: CI-Build
        run: cargo build --release --features=fltk-sys/use-ninja,fltk-sys/enable-glwindow
      - name: Copy Build Artifact
        run: mkdir out && cp -r target/release/build/**/out/lib out/lib
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lib_x86_64-pc-windows-gnu
          path: out
  # build-msys-mingw32:
  #   runs-on: windows-latest
  #   defaults:
  #     run:
  #       shell: msys2 {0}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: msys2/setup-msys2@v2
  #       with:
  #         msystem: MINGW32
  #         update: true
  #         install: git mingw-w64-i686-cc mingw-w64-i686-cmake mingw-w64-i686-ninja mingw-w64-i686-rust --needed
  #     - name: CI-Build
  #       run: cargo build --release --features=fltk-sys/use-ninja,fltk-sys/enable-glwindow
      # - name: Copy Build Artifact
      #   run: mkdir out && cp -r target/release/build/**/out/lib out/lib
      # - name: Upload a Build Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: lib_i686-pc-windows-gnu
      #     path: out
  # build-mingw64:
  #   runs-on: windows-latest
  #   defaults:
  #     run:
  #       shell: bash
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install toolchain
  #       uses: dtolnay/rust-toolchain@stable
  #       with:
  #         targets: "x86_64-pc-windows-gnu"
  #     - name: CI-Build
  #       run: cargo build --target=x86_64-pc-windows-gnu --release --features=fltk-sys/enable-glwindow
      # - name: Copy Build Artifact
      #   run: mkdir out && cp -r target/x86_64-pc-windows-gnu/release/build/**/out/lib out/lib
      # - name: Upload a Build Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: lib_x86_64-pc-windows-gnu
      #     path: out
  build-msvc32:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "i686-pc-windows-msvc"
      - name: CI-Build
        run: cargo build --release --target=i686-pc-windows-msvc --features=fltk-sys/enable-glwindow
      - name: Copy Build Artifact
        run: mkdir out && cp -r target/i686-pc-windows-msvc/release/build/**/out/lib out/lib
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lib_i686-pc-windows-msvc
          path: out
  build-macos-arm64:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "aarch64-apple-darwin"
      - name: CI-Build
        run: cargo build --release --features=fltk-sys/use-ninja,fltk-sys/enable-glwindow --target=aarch64-apple-darwin
      - name: Copy Build Artifact
        run: mkdir out && cp -r target/aarch64-apple-darwin/release/build/**/out/lib out/lib
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lib_aarch64-apple-darwin
          path: out
  build-macos-x64:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "x86_64-apple-darwin"
      - name: CI-Build
        run: cargo build --release --features=fltk-sys/use-ninja,fltk-sys/enable-glwindow --target=x86_64-apple-darwin
      - name: Copy Build Artifact
        run: mkdir out && cp -r target/x86_64-apple-darwin/release/build/**/out/lib out/lib
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lib_x86_64-apple-darwin
          path: out
  build-msvc:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: CI-Build
        run: cargo build --release --features=fltk-sys/enable-glwindow
      - name: Copy Build Artifact
        run: mkdir out && cp -r target/release/build/**/out/lib out/lib
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lib_x86_64-pc-windows-msvc
          path: out
  build-linux-x64:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Download deps
        run: sudo apt-get update && sudo apt-get install -y libpango1.0-dev libx11-dev libxext-dev libxft-dev libxinerama-dev libxcursor-dev libxrender-dev libxfixes-dev libpng-dev libgl1-mesa-dev libglu1-mesa-dev
      - name: CI-Build
        run: cargo build --release --features=fltk-sys/use-ninja,fltk-sys/enable-glwindow
      - name: Copy Build Artifact
        run: mkdir out && cp -r target/release/build/**/out/lib out/lib
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lib_x86_64-unknown-linux-gnu
          path: out
  build-msvc-arm64:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "aarch64-pc-windows-msvc"
      - name: CI-Build
        run: cargo build --release --target=aarch64-pc-windows-msvc --features=fltk-sys/enable-glwindow
      - name: Copy Build Artifact
        run: mkdir out && cp -r target/aarch64-pc-windows-msvc/release/build/**/out/lib out/lib
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lib_aarch64-pc-windows-msvc
          path: out
  build-linux-arm64:
    runs-on: ubuntu-22.04-arm
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Download deps
        run: sudo apt-get update && sudo apt-get install -y libpango1.0-dev libx11-dev libxext-dev libxft-dev libxinerama-dev libxcursor-dev libxrender-dev libxfixes-dev libpng-dev
      - name: CI-Build
        run: cargo build --release --features=fltk-sys/use-ninja
      - name: Copy Build Artifact
        run: mkdir out && cp -r target/release/build/**/out/lib out/lib
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lib_aarch64-unknown-linux-gnu
          path: out
